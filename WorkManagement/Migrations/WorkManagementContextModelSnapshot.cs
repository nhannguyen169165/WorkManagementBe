// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WorkManagement.Models;

namespace WorkManagement.Migrations
{
    [DbContext(typeof(WorkManagementContext))]
    partial class WorkManagementContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WorkManagement.Models.Admin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Company");

                    b.Property<string>("Email");

                    b.Property<string>("Password");

                    b.Property<string>("Role");

                    b.Property<string>("Status");

                    b.HasKey("Id");

                    b.ToTable("Admin");
                });

            modelBuilder.Entity("WorkManagement.Models.Authentication", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Admin_id");

                    b.Property<int>("User_id");

                    b.HasKey("Id");

                    b.HasIndex("Admin_id");

                    b.HasIndex("User_id");

                    b.ToTable("Authentication");
                });

            modelBuilder.Entity("WorkManagement.Models.ListUserInProject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Project_Id");

                    b.Property<int>("User_id");

                    b.HasKey("Id");

                    b.HasIndex("Project_Id");

                    b.HasIndex("User_id");

                    b.ToTable("ListUserInProject");
                });

            modelBuilder.Entity("WorkManagement.Models.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Color");

                    b.Property<string>("Description");

                    b.Property<DateTime>("FinishDate");

                    b.Property<string>("Name");

                    b.Property<DateTime>("StartDate");

                    b.Property<string>("Status");

                    b.Property<int>("User_id");

                    b.Property<string>("WorkingDayPerWeek");

                    b.Property<int>("WorkingTimePerDay");

                    b.HasKey("Id");

                    b.HasIndex("User_id");

                    b.ToTable("Project");
                });

            modelBuilder.Entity("WorkManagement.Models.StatusProject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ProjectId");

                    b.Property<int>("Relation");

                    b.Property<int>("Serial");

                    b.Property<string>("StatusName");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("StatusProject");
                });

            modelBuilder.Entity("WorkManagement.Models.StatusTemplate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Relation");

                    b.Property<int>("Serial");

                    b.Property<string>("StatusName");

                    b.Property<int>("TemplateId");

                    b.HasKey("Id");

                    b.HasIndex("TemplateId");

                    b.ToTable("StatusTemplate");
                });

            modelBuilder.Entity("WorkManagement.Models.Task", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Color");

                    b.Property<string>("Description");

                    b.Property<DateTime>("FinishDate");

                    b.Property<int>("Hours");

                    b.Property<string>("Priority");

                    b.Property<int>("ProjectId");

                    b.Property<DateTime>("StartDate");

                    b.Property<int>("StatusId");

                    b.Property<int>("TaskOwnerId");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.HasIndex("StatusId");

                    b.HasIndex("TaskOwnerId");

                    b.ToTable("Task");
                });

            modelBuilder.Entity("WorkManagement.Models.Template", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AdminId");

                    b.Property<string>("TemplateName");

                    b.HasKey("Id");

                    b.ToTable("Template");
                });

            modelBuilder.Entity("WorkManagement.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Color");

                    b.Property<string>("Email");

                    b.Property<string>("Fullname");

                    b.Property<string>("Password");

                    b.Property<string>("Role");

                    b.Property<string>("Status");

                    b.Property<string>("Tagname");

                    b.Property<string>("statusResetPassword");

                    b.Property<string>("tokenRegister");

                    b.Property<DateTime>("tokenRegisterDate");

                    b.Property<string>("tokenResetPassword");

                    b.Property<DateTime>("tokenResetPasswordDate");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("WorkManagement.Models.Authentication", b =>
                {
                    b.HasOne("WorkManagement.Models.Admin", "admin")
                        .WithMany("Authentication")
                        .HasForeignKey("Admin_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WorkManagement.Models.User", "user")
                        .WithMany("Authentication")
                        .HasForeignKey("User_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WorkManagement.Models.ListUserInProject", b =>
                {
                    b.HasOne("WorkManagement.Models.Project", "Project")
                        .WithMany("ListMember")
                        .HasForeignKey("Project_Id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WorkManagement.Models.User", "user")
                        .WithMany("ListMember")
                        .HasForeignKey("User_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WorkManagement.Models.Project", b =>
                {
                    b.HasOne("WorkManagement.Models.User", "user")
                        .WithMany("Project")
                        .HasForeignKey("User_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WorkManagement.Models.StatusProject", b =>
                {
                    b.HasOne("WorkManagement.Models.Project", "Project")
                        .WithMany("StatusTask")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WorkManagement.Models.StatusTemplate", b =>
                {
                    b.HasOne("WorkManagement.Models.Template", "Template")
                        .WithMany("Status")
                        .HasForeignKey("TemplateId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WorkManagement.Models.Task", b =>
                {
                    b.HasOne("WorkManagement.Models.Project", "Project")
                        .WithMany("TaskList")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WorkManagement.Models.StatusProject", "StatusProject")
                        .WithMany("TaskList")
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WorkManagement.Models.User", "User")
                        .WithMany("TaskList")
                        .HasForeignKey("TaskOwnerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
